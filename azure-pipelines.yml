trigger:
- develop

pool:
  vmImage: 'ubuntu-16.04'

variables:
  GOOGLE_APPLICATION_CREDENTIALS: '' 
  tf_var_file: 'vars-dev.tfvars'


steps:
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'azure-gcp.json'
  displayName: 'Download gcp service account file to use for authentication'

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: '1.13.4'

- task: HelmInstaller@1
  inputs:
    helmVersionToInstall: '2.13.1'

- script: |
    export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
    echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    sudo apt-get update && sudo apt-get install google-cloud-sdk
    echo "##vso[task.setvariable variable=GOOGLE_APPLICATION_CREDENTIALS]$DOWNLOADSECUREFILE_SECUREFILEPATH"
  displayName: 'Install gcloud'

- script: |
    echo $GOOGLE_APPLICATION_CREDENTIALS
    gcloud --quiet auth activate-service-account --key-file=$DOWNLOADSECUREFILE_SECUREFILEPATH
    gcloud --quiet config set project focal-freedom-236620
  displayName: 'Initilaize gcloud'

- script: |
    echo 'cred...'
    echo $GOOGLE_APPLICATION_CREDENTIALS
  displayName: 'gcloud creds'

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.11.14'
  displayName: 'Install Terraform'

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/terraform'
  displayName: 'Terraform Init'

- script: |
    cd $(System.DefaultWorkingDirectory)/infrastructure/terraform
    terraform plan -var-file=$tf_var_file -auto-approve
  displayName: 'Terraform Plan'


- script: |
    cd $(System.DefaultWorkingDirectory)/infrastructure/terraformterraf
    terraform apply -var-file=$tf_var_file -auto-approve
  displayName: 'Terraform Apply'